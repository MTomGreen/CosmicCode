package green.thread;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.Timer;

import green.math.EventTime;
import green.math.LocationMath;
import green.objects.Coincidence;
import green.util.DetectorUtils;
import green.util.WebUtils;

public class MainThread extends Thread {
	
	private static String timeString;
	private static String dateString;
	
	public static GUIThread gui;
	
	@Override
	public synchronized void start() {
		super.start();
		gui = new GUIThread(this);
		gui.start();

		DetectorUtils.init();
		
		ActionListener taskPerformer = new ActionListener(){
			public void actionPerformed(ActionEvent e){
				update();}};
		
		Timer t = new Timer(1000, taskPerformer); //Once per second
		t.setRepeats(true);
		t.start();
		
		EventTime a = new EventTime(); //"2016-07-20+12-00-00"
		a.parse("2016-08-06+12:00:00", EventTime.DOWNLOAD_FORMAT);
		EventTime b = new EventTime(); //2016-07-21+13-00-00
		b.parse("2016-07-20+13:00:00", EventTime.DOWNLOAD_FORMAT);
		
		//Wait for the data to actually be downloaded!
		//Otherwise we can call on null values.
		while(!DetectorUtils.isDataLoaded()){
			try{
				Thread.sleep(300);
			}
			catch(Exception e){
			}
		}
		
		//505, 506, 504, 511, 502, 509, 507
		ArrayList<Coincidence> cons = WebUtils.getCoincidences(DetectorUtils.getDetectorsFromIDs(3303,3302,3301), a, b, 3);
		Coincidence first = cons.get(0);
		LocationMath.getAngleForCoincidence(first);
		
		System.exit(0);
	}
	
	boolean done = false;
	public void update(){
	
	}

	public static String getTime() {
		return timeString;
	}

	public static void setTime(String Time) {
		timeString = Time;
	}

	public static String getDate() {
		return dateString;
	}

	public static void setDate(String date) {
		dateString = date;
	}
	
	
	

}
