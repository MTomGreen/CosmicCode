package green.thread;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.Timer;

import green.detector.Detector;
import green.math.Coord;
import green.math.EventTime;
import green.math.LocationMath;
import green.objects.Coincidence;
import green.objects.HitEvent;
import green.util.DetectorUtils;
import green.util.WebUtils;

public class MainThread extends Thread {
	
	private static String timeString;
	private static String dateString;
	
	public static GUIThread gui;
	
	@Override
	public synchronized void start() {
		super.start();
		gui = new GUIThread(this);
		gui.start();

		DetectorUtils.init();
		
		ActionListener taskPerformer = new ActionListener(){
			public void actionPerformed(ActionEvent e){
				update();}};
		
		Timer t = new Timer(1000, taskPerformer); //Once per second
		t.setRepeats(true);
		t.start();
		
		EventTime a = new EventTime(); //"2016-07-20+12-00-00"
		a.parse("2016-07-20+12:00:00", EventTime.DOWNLOAD_FORMAT);
		EventTime b = new EventTime(); //2016-07-21+13-00-00
		b.parse("2016-07-20+13:00:00", EventTime.DOWNLOAD_FORMAT);
		
		//Wait for the data to actually be downloaded!
		while(!DetectorUtils.isDataLoaded()){
			try{
				Thread.sleep(300);
			}
			catch(Exception e){
			}
		}
		
		
		//505, 506, 504, 511, 502, 509, 507
		//ArrayList<Coincidence> cons = WebUtils.getCoincidences(DetectorUtils.getDetectorsFromIDs(505, 506, 504, 511, 502, 509, 507), a, b, 4);
		//Coincidence first = cons.get(0);
		//LocationMath.getAngleForCoincidence(first);
		double[] coords = Coord.geo_to_ecef(new double[] {Math.toRadians(52.3559919), Math.toRadians(4.9514708), 59.76});
		System.out.println("X: "+coords[0] + ", Y: " + coords[1] + ", Z: " + coords[2]);
		
		
//		Detector A = DetectorUtils.getDetectorFromID(first.events.get(0).detectorID);
//		Detector B = DetectorUtils.getDetectorFromID(first.events.get(1).detectorID);
//		Detector C = DetectorUtils.getDetectorFromID(first.events.get(2).detectorID);
//		Detector D = DetectorUtils.getDetectorFromID(first.events.get(3).detectorID);
//		Detector E = DetectorUtils.getDetectorFromID(first.events.get(4).detectorID);
//		Detector F = DetectorUtils.getDetectorFromID(first.events.get(5).detectorID);
//		Detector G = DetectorUtils.getDetectorFromID(first.events.get(6).detectorID);
//		
//		System.out.println(A.getName() +"   #" + A.getStationID());
//		System.out.println("Distance to: " + DetectorUtils.distanceTo(A, A));
//		System.out.println("Bearing: " + DetectorUtils.getBearingDegrees(A, A));
//		System.out.println(B.getName()+"   #"+B.getStationID());
//		System.out.println("Distance to: " + DetectorUtils.distanceTo(A, B));
//		System.out.println("Bearing: " + DetectorUtils.getBearingDegrees(A, B));
//		System.out.println(C.getName()+"   #" + C.getStationID());
//		System.out.println("Distance to: " + DetectorUtils.distanceTo(A, C));
//		System.out.println("Bearing: " + DetectorUtils.getBearingDegrees(A, C));
//		System.out.println(D.getName());
//		System.out.println("Distance to: " + DetectorUtils.distanceTo(A, D));
//		System.out.println("Bearing: " + DetectorUtils.getBearingDegrees(A, D));
//		System.out.println(E.getName());
//		System.out.println("Distance to: " + DetectorUtils.distanceTo(A, E));
//		System.out.println("Bearing: " + DetectorUtils.getBearingFrom(A, E));
//		System.out.println(F.getName());
//		System.out.println("Distance to: " + DetectorUtils.distanceTo(A, F));
//		System.out.println("Bearing: " + DetectorUtils.getBearingFrom(A, F));
//		System.out.println(G.getName());
//		System.out.println("Distance to: " + DetectorUtils.distanceTo(A, G));
//		System.out.println("Bearing: " + DetectorUtils.getBearingFrom(A, G));
//		
//		for(HitEvent time : cons.get(0).events){
//			System.out.println(time.rawData);
//		}
		
	}
	
	boolean done = false;
	public void update(){
	
	}

	public static String getTime() {
		return timeString;
	}

	public static void setTime(String Time) {
		timeString = Time;
	}

	public static String getDate() {
		return dateString;
	}

	public static void setDate(String date) {
		dateString = date;
	}
	
	
	

}
